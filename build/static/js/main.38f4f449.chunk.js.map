{"version":3,"sources":["img/logo.svg","utils/ellipseAddress.js","actions/types.js","actions/alert.js","components/dashboard/Dashboard.js","reducers/alert.js","reducers/auth.js","reducers/index.js","utils/setAuthToken.js","store.js","utils/api.js","actions/auth.js","components/auth/Register.js","components/auth/Login.js","components/layout/NotFound.js","components/routing/Routes.js","components/layout/Alert.js","App.js","index.js"],"names":["ellipseAddress","address","width","slice","SET_ALERT","REMOVE_ALERT","REGISTER_SUCCESS","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGOUT","ACCOUNT_DELETED","setAlert","msg","alertType","timeout","dispatch","id","uuidv4","type","payload","setTimeout","connect","state","web3Modal","Web3Modal","network","cacheProvider","providerOptions","React","useState","setProvider","setWeb3","walletAddress","setWalletAddress","mintValue","setMintValue","connectWallet","a","_provider","_web3","_accounts","Web3","eth","getAccounts","toLowerCase","disconnectWallet","className","src","logo","alt","onClick","style","minHeight","map","item","index","initialState","alertReducer","action","filter","alert","token","localStorage","getItem","isAuthenticated","loading","user","authReducer","combineReducers","auth","setAuthToken","api","defaults","headers","common","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","currentState","getState","subscribe","previousState","axios","create","baseURL","interceptors","response","use","res","err","status","Promise","reject","loadUser","get","data","register","formData","post","errors","forEach","error","name","email","password","password2","setFormData","onChange","e","target","value","onSubmit","preventDefault","to","placeholder","login","body","required","minLength","NotFound","Routes","props","exact","path","component","Dashboard","Register","Login","alerts","useEffect","NotificationManager","info","success","warning","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.38f4f449.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.bdd8e6b4.svg\";","export default function ellipseAddress (address = '', width = 10) {\r\n  if (!address) {\r\n    return ''\r\n  }\r\n  return `${address.slice(0, width)}...${address.slice(-width)}`\r\n}","export const SET_ALERT = 'SET_ALERT'\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT'\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS'\r\nexport const REGISTER_FAIL = 'REGISTER_FAIL'\r\nexport const USER_LOADED = 'USER_LOADED'\r\nexport const AUTH_ERROR = 'AUTH_ERROR'\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL'\r\nexport const LOGOUT = 'LOGOUT'\r\nexport const ACCOUNT_DELETED = 'ACCOUNT_DELETED'","import { v4 as uuidv4 } from 'uuid'\r\nimport { SET_ALERT, REMOVE_ALERT } from './types'\r\n\r\nexport const setAlert = (msg, alertType, timeout = 5000) => dispatch => {\r\n  const id = uuidv4()\r\n  dispatch({\r\n    type: SET_ALERT,\r\n    payload: { msg, alertType, id }\r\n  })\r\n\r\n  setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout)\r\n}\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Web3 from \"web3\"\r\nimport Web3Modal from \"web3modal\"\r\nimport logo from '../../img/logo.svg'\r\nimport ellipseAddress from '../../utils/ellipseAddress'\r\nimport { setAlert } from '../../actions/alert'\r\n\r\nconst Dashboard = ({ setAlert }) => {\r\n\r\n  const providerOptions = {\r\n    /* See Provider Options Section */\r\n  }\r\n\r\n  const web3Modal = new Web3Modal({\r\n    network: \"mainnet\", // optional\r\n    cacheProvider: true, // optional\r\n    providerOptions // required\r\n  })\r\n\r\n  const [provider, setProvider] = React.useState(null)\r\n  const [web3, setWeb3] = React.useState(null)\r\n  const [walletAddress, setWalletAddress] = React.useState(null)\r\n\r\n  const [mintValue, setMintValue] = React.useState(2)\r\n  const mintMaxValue = 50\r\n\r\n  const mintValueIncrement = () => {\r\n    if (mintValue + 1 > mintMaxValue) {\r\n      setAlert('Maximum Value Overflow', 'warning')\r\n      return\r\n    }\r\n    setMintValue(mintValue + 1)\r\n  }\r\n\r\n  const mintValueDecrement = () => {\r\n    if (mintValue - 1 < 1) {\r\n      setAlert('It can not be set as 0', 'warning')\r\n      return\r\n    }\r\n    setMintValue(mintValue - 1)\r\n  }\r\n\r\n  const connectWallet = async () => {\r\n    let _provider = null\r\n    let _web3 = null\r\n    let _accounts = null\r\n\r\n    _provider = await web3Modal.connect()\r\n    _web3 = new Web3(_provider)\r\n    _accounts = await _web3.eth.getAccounts()\r\n\r\n    setProvider(_provider)\r\n    setWeb3(_web3)\r\n    setWalletAddress(_accounts[0].toLowerCase())\r\n  }\r\n\r\n  const disconnectWallet = async () => {\r\n    setWalletAddress(null)\r\n    setProvider(null)\r\n    setWeb3(null)\r\n  }\r\n\r\n  return (\r\n    <div className='customer-dashboard bg-black text-white'>\r\n      <div className='container-fluid'>\r\n        <div className='row box-shadow bg-dark'>\r\n          <div className='col-md-4 p-4'>\r\n            <img src={logo} alt='SETIMAGE' />\r\n          </div>\r\n          <div className='col-md-4 text-center text-primary h3 p-4'>\r\n            <i className='fa fa-university'></i>\r\n            <span className='ml-2'>Staking</span>\r\n          </div>\r\n          <div className='col-md-4 text-right p-4'>\r\n            {walletAddress\r\n              ?\r\n              <>\r\n                <span className='mr-3'>{ellipseAddress(walletAddress)}</span>\r\n                <button\r\n                  className='btn btn-primary rounded-pill'\r\n                  onClick={() => disconnectWallet()}\r\n                >\r\n                  Disconnect\r\n                </button>\r\n              </>\r\n              :\r\n              <button\r\n                className='btn btn-primary rounded-pill'\r\n                onClick={() => connectWallet()}\r\n              >\r\n                Connect Wallet\r\n              </button>\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='container'>\r\n        <div className='row pt-5'>\r\n          <div className='col-md-6'>\r\n            <div className='box-shadow rounded-lg p-3 m-3' style={{ minHeight: '280px' }}>\r\n              <div className='h2 text-center'>Mint Your Node NFT</div>\r\n              <div className='text-center text-primary'>Current Node Generation: 1</div>\r\n              <div className='text-center'>\r\n                <i onClick={() => mintValueDecrement()} className=\"fa fa-minus h3 mr-3 font-weight-lighter cursor-pointer\"></i>\r\n                <span>\r\n                  <span className='h1 font-weight-bolder'>{mintValue}/</span>\r\n                  <span className='h3'>{mintMaxValue}</span>\r\n                </span>\r\n                <i onClick={() => mintValueIncrement()} className=\"fa fa-plus h3 ml-3 font-weight-lighter cursor-pointer\"></i>\r\n              </div>\r\n              <div className='text-center'>\r\n                <span className='text-primary'>Price: </span>\r\n                <span className='text-white'>400</span>\r\n                <span className='text-primary'> STACK</span>\r\n              </div>\r\n              <div className='row mb-3'>\r\n                <div className='col-md-6 text-center mt-3'>\r\n                  <button className='btn btn-primary rounded-pill'>Mint with STACK</button>\r\n                  <div className='mt-2 small'>\r\n                    <span className='text-primary'>Wallet Balance: </span>\r\n                    <span className='text-white'>2000 STACK</span>\r\n                  </div>\r\n                </div>\r\n                <div className='col-md-6 text-center mt-3'>\r\n                  <button className='btn btn-primary rounded-pill'>Mint with staked STACK</button>\r\n                  <div className='mt-2 small'>\r\n                    <span className='text-primary'>Staked for lottery: </span>\r\n                    <span className='text-white'>2000 STACK</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='col-md-6'>\r\n            <div className='box-shadow rounded-lg p-3 m-3' style={{ minHeight: '280px' }}>\r\n              <div className='h2 text-center'>Node NFT Lottery</div>\r\n              <div className='text-center text-primary'>Stake your STACK to get more lottery tickets</div>\r\n              <div className='text-center mt-3'>\r\n                <span className='h1 font-weight-bolder border-bottom'>2000</span>\r\n                <span className='h3'> stack</span>\r\n              </div>\r\n              <div className='text-center mt-4 pt-1'>\r\n                <button className='btn btn-primary rounded-pill'>Stake STACK</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='row py-5'>\r\n          <div className='col-md-3'></div>\r\n          <div className='col-md-6'>\r\n            <div className='box-shadow rounded-lg p-3 m-3'>\r\n              <div className='h2 text-center'>Auction</div>\r\n              <div className='text-primary text-center mb-3'>Top 20 Bids</div>\r\n              {[1, 2, 3, 4, 5, 6].map((item, index) =>\r\n                <div key={index} className='d-flex justify-content-between py-2 border-bottom border-secondary'>\r\n                  <div className='text-primary'>\r\n                    <span className='mr-3'>{index + 1}</span>\r\n                    <span className='badge rounded-pill bg-primary text-primary font-18 mr-2'>8</span>\r\n                    <span>0x8be3...37e</span>\r\n                  </div>\r\n                  <div className='mr-4'>2000 STACK</div>\r\n                </div>\r\n              )}\r\n              <div className='text-center mt-4'>\r\n                <span className='text-primary'>Place your bid: </span>\r\n                <span className='h3 border-bottom mx-2'>3000</span>\r\n                <span>STACK</span>\r\n              </div>\r\n              <div className='text-center mt-2 pt-1'>\r\n                <button className='btn btn-primary rounded-pill px-4'>Submit</button>\r\n              </div>\r\n              <div className='text-center my-3 px-5'>\r\n                The auction will end at a random time on a random day before DATE\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='col-md-3'></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, { setAlert })(Dashboard)","import { SET_ALERT, REMOVE_ALERT } from '../actions/types'\r\n\r\nconst initialState = []\r\n\r\nfunction alertReducer(state = initialState, action) {\r\n  const { type, payload } = action\r\n\r\n  switch (type) {\r\n    case SET_ALERT:\r\n      return [...state, payload]\r\n    case REMOVE_ALERT:\r\n      return state.filter((alert) => alert.id !== payload)\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default alertReducer\r\n","import {\r\n  REGISTER_SUCCESS,\r\n  //REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  //LOGIN_FAIL,\r\n  LOGOUT,\r\n  ACCOUNT_DELETED\r\n} from '../actions/types'\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem('token'),\r\n  isAuthenticated: null,\r\n  loading: true,\r\n  user: null\r\n}\r\n\r\nfunction authReducer(state = initialState, action) {\r\n  const { type, payload } = action\r\n\r\n  switch (type) {\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: payload\r\n      }\r\n    case REGISTER_SUCCESS:\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        isAuthenticated: true,\r\n        loading: false\r\n      }\r\n    case ACCOUNT_DELETED:\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n        user: null\r\n      }\r\n    case AUTH_ERROR:\r\n    case LOGOUT:\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n        user: null\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default authReducer\r\n","import { combineReducers } from 'redux'\r\nimport alert from './alert'\r\nimport auth from './auth'\r\n\r\nexport default combineReducers({\r\n  alert,\r\n  auth,\r\n})\r\n","import api from './api'\r\n\r\nconst setAuthToken = token => {\r\n  if (token) {\r\n    api.defaults.headers.common['x-auth-token'] = token\r\n    localStorage.setItem('token', token)\r\n  } else {\r\n    delete api.defaults.headers.common['x-auth-token']\r\n    localStorage.removeItem('token')\r\n  }\r\n}\r\n\r\nexport default setAuthToken\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\nimport setAuthToken from './utils/setAuthToken';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\n// set up a store subscription listener\r\n// to store the users token in localStorage\r\n\r\n// initialize current state from redux store for subscription comparison\r\n// preventing undefined error\r\nlet currentState = store.getState();\r\n\r\nstore.subscribe(() => {\r\n  // keep track of the previous and current state to compare changes\r\n  let previousState = currentState;\r\n  currentState = store.getState();\r\n  // if the token changes set the value in localStorage and axios headers\r\n  if (previousState.auth.token !== currentState.auth.token) {\r\n    const token = currentState.auth.token;\r\n    setAuthToken(token);\r\n  }\r\n});\r\n\r\nexport default store;\r\n","import axios from 'axios'\r\nimport store from '../store'\r\nimport { LOGOUT } from '../actions/types'\r\n\r\nconst api = axios.create({\r\n  baseURL: '/api',\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n})\r\n/**\r\n intercept any error responses from the api\r\n and check if the token is no longer valid.\r\n ie. Token has expired or user is no longer\r\n authenticated.\r\n logout the user if the token has expired\r\n**/\r\n\r\napi.interceptors.response.use(\r\n  res => res,\r\n  err => {\r\n    if (err.response.status === 401) {\r\n      store.dispatch({ type: LOGOUT })\r\n    }\r\n    return Promise.reject(err)\r\n  }\r\n)\r\n\r\nexport default api\r\n","import api from '../utils/api'\r\nimport { setAlert } from './alert'\r\nimport {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT\r\n} from './types'\r\n\r\n// Load User\r\nexport const loadUser = () => async dispatch => {\r\n  try {\r\n    const res = await api.get('/auth')\r\n\r\n    dispatch({\r\n      type: USER_LOADED,\r\n      payload: res.data\r\n    })\r\n  } catch (err) {\r\n    dispatch({\r\n      type: AUTH_ERROR\r\n    })\r\n  }\r\n}\r\n\r\n// Register User\r\nexport const register = formData => async dispatch => {\r\n  try {\r\n    const res = await api.post('/users', formData)\r\n\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: res.data\r\n    })\r\n    dispatch(loadUser())\r\n  } catch (err) {\r\n    const errors = err.response.data.errors\r\n\r\n    if (errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n    }\r\n\r\n    dispatch({\r\n      type: REGISTER_FAIL\r\n    })\r\n  }\r\n}\r\n\r\n// Login User\r\nexport const login = (email, password) => async dispatch => {\r\n  const body = { email, password }\r\n\r\n  try {\r\n    const res = await api.post('/auth', body)\r\n\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data\r\n    })\r\n\r\n    dispatch(loadUser())\r\n  } catch (err) {\r\n    const errors = err.response.data.errors\r\n\r\n    if (errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n    }\r\n\r\n    dispatch({\r\n      type: LOGIN_FAIL\r\n    })\r\n  }\r\n}\r\n\r\n// Logout\r\nexport const logout = () => ({ type: LOGOUT })\r\n","import React, { Fragment, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { setAlert } from '../../actions/alert'\r\nimport { register } from '../../actions/auth'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Register = ({ setAlert, register, isAuthenticated }) => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    password2: ''\r\n  })\r\n\r\n  const { name, email, password, password2 } = formData\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value })\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault()\r\n    if (password !== password2) {\r\n      setAlert('Passwords do not match', 'danger')\r\n    } else {\r\n      register({ name, email, password })\r\n    }\r\n  }\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/dashboard\" />\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Sign Up</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\" /> Create Your Account\r\n      </p>\r\n      <form className=\"form\" onSubmit={onSubmit}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Name\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Email Address\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={onChange}\r\n          />\r\n          <small className=\"form-text\">\r\n            This site uses Gravatar so if you want a profile image, use a\r\n            Gravatar email\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Confirm Password\"\r\n            name=\"password2\"\r\n            value={password2}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\r\n      </form>\r\n      <p className=\"my-1\">\r\n        Already have an account? <Link to=\"/login\">Sign In</Link>\r\n      </p>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nRegister.propTypes = {\r\n  setAlert: PropTypes.func.isRequired,\r\n  register: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n})\r\n\r\nexport default connect(mapStateToProps, { setAlert, register })(Register)\r\n","import React, { Fragment, useState } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { login } from '../../actions/auth'\r\n\r\nconst Login = ({ login, isAuthenticated }) => {\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: ''\r\n  })\r\n\r\n  const { email, password } = formData\r\n\r\n  const onChange = e =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value })\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault()\r\n    login(email, password)\r\n  }\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/dashboard\" />\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Sign In</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\" /> Sign Into Your Account\r\n      </p>\r\n      <form className=\"form\" onSubmit={onSubmit}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Email Address\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={onChange}\r\n            minLength=\"6\"\r\n          />\r\n        </div>\r\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Login\" />\r\n      </form>\r\n      <p className=\"my-1\">\r\n        Don't have an account? <Link to=\"/register\">Sign Up</Link>\r\n      </p>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n})\r\n\r\nexport default connect(mapStateToProps, { login })(Login)\r\n","import React, { Fragment } from 'react'\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <Fragment>\r\n      <h1 className='x-large text-primary'>\r\n        <i className='fas fa-exclamation-triangle' /> Page Not Found\r\n      </h1>\r\n      <p className='large'>Sorry, this page does not exist</p>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default NotFound\r\n","import React from 'react'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport Dashboard from '../dashboard/Dashboard'\r\nimport Register from '../auth/Register'\r\nimport Login from '../auth/Login'\r\nimport NotFound from '../layout/NotFound'\r\n\r\nconst Routes = props => {\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Dashboard} />\r\n        <Route exact path=\"/register\" component={Register} />\r\n        <Route exact path=\"/login\" component={Login} />\r\n        <Route component={NotFound} />\r\n      </Switch>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Routes\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications'\r\nimport 'react-notifications/lib/notifications.css'\r\n\r\nconst Alert = ({ alerts }) => {\r\n  React.useEffect(() => {\r\n    alerts.forEach(alert => {\r\n      switch (alert.alertType) {\r\n        case 'info':\r\n          NotificationManager.info('Info message', alert.msg, 2000)\r\n          break\r\n        case 'success':\r\n          NotificationManager.success('Success message', alert.msg, 2000)\r\n          break\r\n        case 'warning':\r\n          NotificationManager.warning('Warning message', alert.msg, 2000)\r\n          break\r\n        case 'danger':\r\n          NotificationManager.warning('Warning message', alert.msg, 2000)\r\n          break\r\n        case 'error':\r\n          NotificationManager.error('Error message', alert.msg, 2000)\r\n          break\r\n        default:\r\n          break\r\n      }\r\n    })\r\n  }, [alerts])\r\n\r\n  return (\r\n    <div>\r\n      <NotificationContainer />\r\n    </div>\r\n  )\r\n}\r\n\r\nAlert.propTypes = {\r\n  alerts: PropTypes.array.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  alerts: state.alert\r\n})\r\n\r\nexport default connect(mapStateToProps)(Alert)","import React, { Fragment } from 'react'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport Dashboard from './components/dashboard/Dashboard'\r\nimport Routes from './components/routing/Routes'\r\nimport Alert from './components/layout/Alert'\r\n\r\n// Redux\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\n\r\nimport './App.css'\r\n\r\nconst App = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <Router>\r\n        <Fragment>\r\n          <Alert />\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Dashboard} />\r\n            <Route component={Routes} />\r\n          </Switch>\r\n        </Fragment>\r\n      </Router>\r\n    </Provider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}